
[{"ruleId":"no-duplicate-imports","severity":2,"message":"'other-thing' import is duplicated.","line":4,"column":1,"nodeType":"ImportDeclaration","source":"import {thing} from 'other-thing';"},{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":8,"column":1,"nodeType":"ImportDeclaration","source":"import y from 'y';"},{"ruleId":"no-unused-vars","severity":2,"message":"'func' is defined but never used","line":18,"column":10,"nodeType":"Identifier","source":"function func() { // eslint-disable-line no-redeclare"},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":26,"column":14,"nodeType":"Property","source":"  bar: 'blah',","fix":{"range":[476,477],"text":""}},{"ruleId":"no-cond-assign","severity":2,"message":"Unexpected assignment within an 'if' statement.","line":30,"column":1,"nodeType":"IfStatement","source":"if(bar = 1 && bar === 2) {"},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":35,"column":1,"nodeType":"MemberExpression","source":"console.log(\"I shouldn't be doing this in production code\");"},{"ruleId":"no-constant-condition","severity":2,"message":"Unexpected constant condition.","line":38,"column":1,"nodeType":"IfStatement","source":"if(true) {"},{"ruleId":"no-control-regex","severity":2,"message":"Unexpected control character in regular expression.","line":43,"column":21,"nodeType":"Literal","source":"regexp = new RegExp('\\x1f');"},{"ruleId":"no-debugger","severity":2,"message":"Unexpected 'debugger' statement.","line":46,"column":1,"nodeType":"DebuggerStatement","source":"debugger;"},{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'a'.","line":52,"column":3,"nodeType":"ObjectExpression","source":"  a: 4"},{"ruleId":"no-duplicate-case","severity":2,"message":"Duplicate case label.","line":61,"column":1,"nodeType":"SwitchCase","source":"case 1:"},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":66,"column":9,"nodeType":"BlockStatement","source":"if(obj) {}"},{"ruleId":"no-empty-character-class","severity":2,"message":"Empty class.","line":69,"column":7,"nodeType":"Literal","source":"obj = /[].*/;"},{"ruleId":"no-ex-assign","severity":2,"message":"Do not assign to the exception parameter.","line":76,"column":3,"nodeType":"Identifier","source":"  e = 10;"},{"ruleId":"no-extra-boolean-cast","severity":2,"message":"Redundant Boolean call.","line":80,"column":4,"nodeType":"CallExpression","source":"if(Boolean(bool)) {"},{"ruleId":"no-extra-parens","severity":2,"message":"Gratuitous parentheses around expression.","line":85,"column":7,"nodeType":"BinaryExpression","source":"obj = (1 + 0);"},{"ruleId":"no-extra-semi","severity":2,"message":"Unnecessary semicolon.","line":88,"column":10,"nodeType":"EmptyStatement","source":"obj = 2; ; // eslint-disable-line max-statements-per-line","fix":{"range":[1158,1159],"text":""}},{"ruleId":"no-func-assign","severity":2,"message":"'func' is a function.","line":91,"column":1,"nodeType":"Identifier","source":"func = function() {"},{"ruleId":"no-const-assign","severity":2,"message":"'func' is constant.","line":91,"column":1,"nodeType":"Identifier","source":"func = function() {"},{"ruleId":"no-inner-declarations","severity":2,"message":"Move function declaration to function body root.","line":98,"column":5,"nodeType":"FunctionDeclaration","source":"    function foo2() { // eslint-disable-line no-redeclare"},{"ruleId":"no-shadow","severity":2,"message":"'foo2' is already declared in the upper scope.","line":98,"column":14,"nodeType":"Identifier","source":"    function foo2() { // eslint-disable-line no-redeclare"},{"ruleId":"no-invalid-regexp","severity":2,"message":"Invalid regular expression: /[/: Unterminated character class","line":106,"column":10,"nodeType":"NewExpression","source":"regexp = new RegExp('[');"},{"ruleId":"no-irregular-whitespace","severity":2,"message":"Irregular whitespace not allowed","line":109,"column":9,"nodeType":"Program","source":"if(bool)â€‚{"},{"ruleId":"no-negated-in-lhs","severity":2,"message":"The 'in' expression's left operand is negated","line":114,"column":4,"nodeType":"BinaryExpression","source":"if(!string in obj) {"},{"ruleId":"no-obj-calls","severity":2,"message":"'Math' is not a function.","line":119,"column":1,"nodeType":"CallExpression","source":"Math(); // eslint-disable-line new-cap"},{"ruleId":"no-regex-spaces","severity":2,"message":"Spaces are hard to count. Use {3}.","line":122,"column":10,"nodeType":"Literal","source":"regexp = /foo   bar/;"},{"ruleId":"no-sparse-arrays","severity":2,"message":"Unexpected comma in middle of array.","line":125,"column":9,"nodeType":"ArrayExpression","source":"array = ['red',, 'blue'];"},{"ruleId":"no-unexpected-multiline","severity":2,"message":"Unexpected newline between object and [ of property access.","line":129,"column":3,"nodeType":"Literal","source":"  [1].forEach(num => num + 1);"},{"ruleId":"no-unreachable","severity":2,"message":"Unreachable code.","line":134,"column":3,"nodeType":"ReturnStatement","source":"  return 2;"},{"ruleId":"no-unsafe-finally","severity":2,"message":"Unsafe usage of ReturnStatement","line":143,"column":5,"nodeType":"ReturnStatement","source":"    return 2;"},{"ruleId":"use-isnan","severity":2,"message":"Use the isNaN function to compare with NaN.","line":148,"column":4,"nodeType":"BinaryExpression","source":"if(bool === NaN) {"},{"ruleId":"no-use-before-define","severity":2,"message":"'NaN' was used before it was defined","line":148,"column":13,"nodeType":"Identifier","source":"if(bool === NaN) {"},{"ruleId":"valid-jsdoc","severity":2,"message":"Missing JSDoc @returns for function.","line":153,"column":1,"nodeType":"Block","source":"/**"},{"ruleId":"valid-typeof","severity":2,"message":"Invalid typeof comparison value","line":162,"column":20,"nodeType":"Literal","source":"if(typeof bool === 'thing') {"},{"ruleId":"accessor-pairs","severity":2,"message":"Getter is not present","line":169,"column":7,"nodeType":"ObjectExpression","source":"obj = {"},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":176,"column":12,"nodeType":"FunctionExpression","source":"[1, 2].map(function(num) {"},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in this function.","line":176,"column":12,"nodeType":"FunctionExpression","source":"[1, 2].map(function(num) {"},{"ruleId":"complexity","severity":2,"message":"Function 'foo' has a complexity of 11.","line":182,"column":1,"nodeType":"FunctionDeclaration","source":"function foo() { // eslint-disable-line no-redeclare"},{"ruleId":"max-statements","severity":2,"message":"This function has too many statements (15). Maximum allowed is 10.","line":182,"column":1,"nodeType":"FunctionDeclaration","source":"function foo() { // eslint-disable-line no-redeclare"},{"ruleId":"consistent-return","severity":2,"message":"Expected a return value.","line":226,"column":3,"nodeType":"ReturnStatement","source":"  return;"},{"ruleId":"curly","severity":2,"message":"Expected { after 'if' condition.","line":230,"column":1,"nodeType":"IfStatement","source":"if(bool) number++;"},{"ruleId":"no-const-assign","severity":2,"message":"'number' is constant.","line":230,"column":10,"nodeType":"Identifier","source":"if(bool) number++;"},{"ruleId":"dot-location","severity":2,"message":"Expected dot to be on same line as property.","line":233,"column":16,"nodeType":"MemberExpression","source":"obj = obj.thing."},{"ruleId":"dot-notation","severity":2,"message":"[\"thing\"] is better written in dot notation.","line":237,"column":11,"nodeType":"Literal","source":"obj = obj['thing'];"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":240,"column":13,"nodeType":"BinaryExpression","source":"bool = bool == null;"},{"ruleId":"guard-for-in","severity":2,"message":"The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.","line":243,"column":1,"nodeType":"ForInStatement","source":"for(string in obj) {"},{"ruleId":"no-alert","severity":2,"message":"Unexpected alert.","line":  [32mâœ”[39m lints stuff rightly[90m[2m (860ms)[22m[39m
248,"column":1,"nodeType":"CallExpression","source":"alert('hi');"},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":252,"column":1,"nodeType":"SwitchCase","source":"case 1:"},{"ruleId":"no-div-regex","severity":2,"message":"A regular expression literal can be confused with '/='.","line":258,"column":10,"nodeType":"Literal","source":"regexp = /=foo/;"},{"ruleId":"no-else-return","severity":2,"message":"Unexpected 'else' after 'return'.","line":265,"column":8,"nodeType":"BlockStatement","source":"  else {"},{"ruleId":"no-empty-function","severity":2,"message":"Unexpected empty function.","line":271,"column":16,"nodeType":"FunctionDeclaration","source":"function foo() {} // eslint-disable-line no-redeclare"},{"ruleId":"no-empty-pattern","severity":2,"message":"Unexpected empty object pattern.","line":274,"column":7,"nodeType":"ObjectPattern","source":"const {} = obj;"},{"ruleId":"no-eval","severity":2,"message":"eval can be harmful.","line":277,"column":1,"nodeType":"CallExpression","source":"eval('const a = 2;');"},{"ruleId":"no-extend-native","severity":2,"message":"Object prototype is read only, properties should not be added.","line":280,"column":1,"nodeType":"AssignmentExpression","source":"Object.prototype.extra = 55;"},{"ruleId":"no-shadow","severity":2,"message":"'foo' is already declared in the upper scope.","line":283,"column":11,"nodeType":"Identifier","source":"(function foo() { // eslint-disable-line no-redeclare"},{"ruleId":"no-extra-bind","severity":2,"message":"The function binding is unnecessary.","line":285,"column":4,"nodeType":"CallExpression","source":"}).bind(number);"},{"ruleId":"no-floating-decimal","severity":2,"message":"A leading decimal point can be confused with a dot.","line":288,"column":7,"nodeType":"Literal","source":"bar = .8;"},{"ruleId":"no-implicit-coercion","severity":2,"message":"use `Boolean(bool)` instead.","line":291,"column":7,"nodeType":"UnaryExpression","source":"bar = !!bool;"},{"ruleId":"no-implied-eval","severity":2,"message":"Implied eval. Consider passing a function instead of a string.","line":294,"column":1,"nodeType":"CallExpression","source":"setTimeout('const d = 3;');"},{"ruleId":"no-iterator","severity":2,"message":"Reserved name '__iterator__'.","line":298,"column":1,"nodeType":"MemberExpression","source":"obj.prototype.__iterator__ = function() {"},{"ruleId":"no-labels","severity":2,"message":"Unexpected labeled statement.","line":304,"column":1,"nodeType":"LabeledStatement","source":"outer: while(bool) { // eslint-disable-line no-unused-labels"},{"ruleId":"no-lone-blocks","severity":2,"message":"Block is redundant.","line":309,"column":1,"nodeType":"BlockStatement","source":"{"},{"ruleId":"no-loop-func","severity":2,"message":"Don't make functions within a loop","line":315,"column":9,"nodeType":"FunctionExpression","source":"  obj = function() {"},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2343","line":321,"column":7,"nodeType":"Literal","source":"bar = 2343 + 2;"},{"ruleId":"no-multi-spaces","severity":2,"message":"Multiple spaces found before '='.","line":325,"column":6,"nodeType":"Punctuator","source":"bar  = 1;","fix":{"range":[4509,4511],"text":" "}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":329,"column":2,"nodeType":"Program","source":""},{"ruleId":"no-native-reassign","severity":2,"message":"String is a read-only native object.","line":331,"column":1,"nodeType":"Identifier","source":"String = 'hi';"},{"ruleId":"no-new","severity":2,"message":"Do not use 'new' for side effects.","line":334,"column":1,"nodeType":"ExpressionStatement","source":"new Math();"},{"ruleId":"no-new-wrappers","severity":2,"message":"Do not use Math as a constructor.","line":334,"column":1,"nodeType":"NewExpression","source":"new Math();"},{"ruleId":"no-new-func","severity":2,"message":"The Function constructor is eval.","line":337,"column":7,"nodeType":"NewExpression","source":"bar = new Function('a', 'b', 'return a + b;');"},{"ruleId":"no-new-wrappers","severity":2,"message":"Do not use String as a constructor.","line":340,"column":7,"nodeType":"NewExpression","source":"bar = new String('');"},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'param1'.","line":344,"column":3,"nodeType":"Identifier","source":"  param1 = 13;"},{"ruleId":"no-proto","severity":2,"message":"The '__proto__' property is deprecated.","line":349,"column":7,"nodeType":"MemberExpression","source":"bar = obj.__proto__;"},{"ruleId":"no-redeclare","severity":2,"message":"'foo' is already defined","line":352,"column":10,"nodeType":"Identifier","source":"function foo() {"},{"ruleId":"no-return-assign","severity":2,"message":"Return statement should not contain assignment.","line":358,"column":3,"nodeType":"ReturnStatement","source":"  return bar = 2;"},{"ruleId":"no-script-url","severity":2,"message":"Script URL is a form of eval.","line":362,"column":17,"nodeType":"Literal","source":"location.href = 'javascript:void(0)';"},{"ruleId":"no-self-assign","severity":2,"message":"'bar' is assigned to itself.","line":365,"column":7,"nodeType":"Identifier","source":"bar = bar;"},{"ruleId":"no-self-compare","severity":2,"message":"Comparing to itself is potentially pointless.","line":368,"column":7,"nodeType":"BinaryExpression","source":"bar = 1 === 1;"},{"ruleId":"no-sequences","severity":2,"message":"Unexpected use of comma operator.","line":371,"column":12,"nodeType":"SequenceExpression","source":"bar = foo(), 2; // eslint-disable-line no-unused-expressions"},{"ruleId":"no-throw-literal","severity":2,"message":"Expected an object to be thrown.","line":375,"column":3,"nodeType":"ThrowStatement","source":"  throw 'Error';"},{"ruleId":"no-unmodified-loop-condition","severity":2,"message":"'bool' is not modified in this loop.","line":379,"column":7,"nodeType":"Identifier","source":"while(bool) {"},{"ruleId":"no-unused-expressions","severity":2,"message":"Expected an assignment or function call and instead saw an expression.","line":384,"column":1,"nodeType":"ExpressionStatement","source":"0;"},{"ruleId":"no-useless-concat","severity":2,"message":"Unexpected string concatenation of literals.","line":388,"column":12,"nodeType":"BinaryExpression","source":"bar = '23' + 'jk';"},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\:","line":391,"column":8,"nodeType":"Literal","source":"bar = /\\:/;"},{"ruleId":"no-void","severity":2,"message":"Expected 'undefined' and instead saw 'void'.","line":395,"column":10,"nodeType":"UnaryExpression","source":"  return void 0;"},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":399,"column":7,"nodeType":"CallExpression","source":"bar = parseInt('071');"},{"ruleId":"wrap-iife","severity":2,"message":"Wrap an immediate function invocation in parentheses.","line":402,"column":7,"nodeType":"CallExpression","source":"bar = function() {"},{"ruleId":"yoda","severity":2,"message":"Expected literal to be on the right side of ===.","line":407,"column":4,"nodeType":"BinaryExpression","source":"if('2' === bar) {"},{"ruleId":"no-shadow","severity":2,"message":"'bar' is already declared in the upper scope.","line":415,"column":9,"nodeType":"Identifier","source":"  const bar = 2;"},{"ruleId":"no-shadow-restricted-names","severity":2,"message":"Shadowing of global property 'NaN'.","line":420,"column":10,"nodeType":"Identifier","source":"function NaN() {"},{"ruleId":"no-undef","severity":2,"message":"'b' is not defined.","line":425,"column":1,"nodeType":"Identifier","source":"b = 10;"},{"ruleId":"no-unused-vars","severity":2,"message":"'k' is defined but never used","line":428,"column":7,"nodeType":"Identifier","source":"const k = 2;"},{"ruleId":"no-use-before-define","severity":2,"message":"'l' was used before it was defined","line":432,"column":10,"nodeType":"Identifier","source":"  return l;"},{"ruleId":"array-bracket-spacing","severity":2,"message":"There should be no space after '['","line":439,"column":7,"nodeType":"ArrayExpression","source":"bar = [ 1 ];","fix":{"range":[5933,5934],"text":""}},{"ruleId":"array-bracket-spacing","severity":2,"message":"There should be no space before ']'","line":439,"column":11,"nodeType":"ArrayExpression","source":"bar = [ 1 ];","fix":{"range":[5935,5936],"text":""}},{"ruleId":"block-spacing","severity":2,"message":"Requires a space after '{'.","line":442,"column":10,"nodeType":"BlockStatement","source":"if(bool) {return true;}","fix":{"range":[5967,5967],"text":" "}},{"ruleId":"block-spacing","severity":2,"message":"Requires a space before '}'.","line":442,"column":23,"nodeType":"BlockStatement","source":"if(bool) {return true;}","fix":{"range":[5979,5979],"text":" "}},{"ruleId":"camelcase","severity":2,"message":"Identifier 'djs_klds' is not in camel case.","line":445,"column":7,"nodeType":"Identifier","source":"const djs_klds = 3; // eslint-disable-line no-unused-vars"},{"ruleId":"comma-spacing","severity":2,"message":"A space is required after ','.","line":448,"column":12,"nodeType":"Punctuator","source":"array = [1 ,2];","fix":{"range":[6083,6083],"text":" "}},{"ruleId":"comma-spacing","severity":2,"message":"There should be no space before ','.","line":448,"column":12,"nodeType":"Punctuator","source":"array = [1 ,2];","fix":{"range":[6081,6082],"text":""}},{"ruleId":"comma-style","severity":2,"message":"',' should be placed last.","line":452,"column":4,"nodeType":"Literal","source":"  , 2];"},{"ruleId":"computed-property-spacing","severity":2,"message":"There should be no space after '['","line":455,"column":10,"nodeType":"MemberExpression","source":"bar = obj[ bar ];","fix":{"range":[6162,6163],"text":""}},{"ruleId":"computed-property-spacing","severity":2,"message":"There should be no space before ']'","line":455,"column":16,"nodeType":"MemberExpression","source":"bar = obj[ bar ];","fix":{"range":[6166,6167],"text":""}},{"ruleId":"consistent-this","severity":2,"message":"Unexpected alias 'bar' for 'this'.","line":458,"column":1,"nodeType":"AssignmentExpression","source":"bar = this;"},{"ruleId":"no-redeclare","severity":2,"message":"'func' is already defined","line":461,"column":7,"nodeType":"Identifier","source":"const func = function() {"},{"ruleId":"func-style","severity":2,"message":"Expected a function declaration.","line":461,"column":7,"nodeType":"VariableDeclarator","source":"const func = function() {"},{"ruleId":"indent","severity":2,"message":"Expected indentation of 0 space characters but found 2.","line":466,"column":3,"nodeType":"ExpressionStatement","source":"  bar = 2;","fix":{"range":[6269,6271],"text":""}},{"ruleId":"key-spacing","severity":2,"message":"Extra space after key 'd'.","line":469,"column":8,"nodeType":"Identifier","source":"obj = {d :3};"},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'd'.","line":469,"column":11,"nodeType":"Literal","source":"obj = {d :3};"},{"ruleId":"key-spacing","severity":2,"message":"Extra space after key 'd'.","line":471,"column":3,"nodeType":"Identifier","source":"  d :3"},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'd'.","line":471,"column":6,"nodeType":"Literal","source":"  d :3"},{"ruleId":"keyword-spacing","severity":2,"message":"Unexpected space(s) after \"if\".","line":475,"column":1,"source":"if (bool) {","fix":{"range":[6350,6351],"text":""}},{"ruleId":"keyword-spacing","severity":2,"message":"Unexpected space(s) after \"for\".","line":478,"column":1,"source":"for (bar; bar < 1; bar++) {","fix":{"range":[6377,6378],"text":""}},{"ruleId":"keyword-spacing","severity":2,"message":"Unexpected space(s) after \"while\".","line":481,"column":1,"source":"while (bool) {","fix":{"range":[6421,6422],"text":""}},{"ruleId":"keyword-spacing","severity":2,"message":"Unexpected space(s) after \"switch\".","line":484,"column":1,"source":"switch (string) {","fix":{"range":[6455,6456],"text":""}},{"ruleId":"keyword-spacing","severity":2,"message":"Unexpected space(s) after \"catch\".","line":491,"column":1,"source":"catch (e) {","fix":{"range":[6528,6529],"text":""}},{"ruleId":"max-depth","severity":2,"message":"Blocks are nested too deeply (4).","line":499,"column":7,"nodeType":"IfStatement","source":"      if(bool) {"},{"ruleId":"max-len","severity":2,"message":"Line 507 exceeds the maximum line length of 80.","line":507,"column":1,"nodeType":"Program","source":"// This comment is way to long, and should be broken over a few different lines to make it readable"},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":510,"column":5,"nodeType":"FunctionExpression","source":"foo(function() {"},{"ruleId":"max-nested-callbacks","severity":2,"message":"Too many nested callbacks (2). Maximum allowed is 1.","line":511,"column":7,"nodeType":"FunctionExpression","source":"  bar(function() {"},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":511,"column":7,"nodeType":"FunctionExpression","source":"  bar(function() {"},{"ruleId":"max-params","severity":2,"message":"This function has too many parameters (4). Maximum allowed is 3.","line":517,"column":1,"nodeType":"FunctionDeclaration","source":"function foo(a, b, c, d) { // eslint-disable-line no-redeclare, no-unused-vars"},{"ruleId":"max-statements","severity":2,"message":"This function has too many statements (11). Maximum allowed is 10.","line":522,"column":1,"nodeType":"FunctionDeclaration","source":"function foo() { // eslint-disable-line no-redeclare"},{"ruleId":"max-statements-per-line","severity":2,"message":"This line has too many statements. Maximum allowed is 1.","line":537,"column":19,"nodeType":"VariableDeclaration","source":"const thing1 = 2; const thing2 = 1; // eslint-disable-line no-unused-vars"},{"ruleId":"new-cap","severity":2,"message":"A function with a name starting with an uppercase letter should only be used as a constructor.","line":541,"column":7,"nodeType":"CallExpression","source":"bar = Blah();"},{"ruleId":"new-cap","severity":2,"message":"A constructor name should not start with a lowercase letter.","line":542,"column":11,"nodeType":"NewExpression","source":"bar = new blah();"},{"ruleId":"new-parens","severity":2,"message":"Missing '()' invoking a constructor","line":546,"column":7,"nodeType":"NewExpression","source":"bar = new Error;"},{"ruleId":"no-array-constructor","severity":2,"message":"The array literal notation [] is preferrable.","line":549,"column":7,"nodeType":"CallExpression","source":"bar = Array(0, 1, 2);"},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":552,"column":7,"nodeType":"BinaryExpression","source":"bar = 2 | 1;"},{"ruleId":"no-continue","severity":2,"message":"Unexpected use of continue statement","line":557,"column":5,"nodeType":"ContinueStatement","source":"    continue;"},{"ruleId":"no-inline-comments","severity":2,"message":"Unexpected comment inline with code.","line":563,"column":10,"nodeType":"Line","source":"bar = 2; // bad comment"},{"ruleId":"no-lonely-if","severity":2,"message":"Unexpected if as the only statement in an else block.","line":570,"column":3,"nodeType":"IfStatement","source":"  if(bool) {"},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":577,"column":2,"nodeType":"Program","source":""},{"ruleId":"no-negated-condition","severity":2,"message":"Unexpected negated condition.","line":579,"column":1,"nodeType":"IfStatement","source":"if(!bool) {"},{"ruleId":"no-nested-ternary","severity":2,"message":"Do not nest ternary expressions","line":587,"column":7,"nodeType":"ConditionalExpression","source":"bar = bar ? 1 : bar === 2 ? 2 : 0;"},{"ruleId":"no-new-object","severity":2,"message":"The object literal notation {} is preferrable.","line":590,"column":7,"nodeType":"NewExpression","source":"bar = new Object();"},{"ruleId":"no-spaced-func","severity":2,"message":"Unexpected space between function name and paren.","line":593,"column":1,"nodeType":"CallExpression","source":"foo ();","fix":{"range":[7891,7892],"text":""}},{"ruleId":"no-trailing-spaces","severity":2,"message":"Trailing spaces not allowed.","line":596,"column":9,"nodeType":"Program","source":"bar = 2; ","fix":{"range":[7927,7928],"text":""}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_lk'.","line":599,"column":7,"nodeType":"VariableDeclarator","source":"const _lk = 2; // eslint-disable-line no-unused-vars"},{"ruleId":"no-unneeded-ternary","severity":2,"message":"Unnecessary use of boolean literals in conditional expression","line":602,"column":21,"nodeType":"ConditionalExpression","source":"bool = bool === 1 ? true : false;"},{"ruleId":"no-whitespace-before-property","severity":2,"message":"Unexpected whitespace before property ok.","line":605,"column":7,"nodeType":"MemberExpression","source":"bar = obj .ok;","fix":{"range":[8107,8109],"text":"."}},{"ruleId":"object-curly-spacing","severity":2,"message":"There should be no space after '{'","line":608,"column":7,"nodeType":"ObjectExpression","source":"bar = { a: 1 };","fix":{"range":[8145,8146],"text":""}},{"ruleId":"object-curly-spacing","severity":2,"message":"There should be no space before '}'","line":608,"column":14,"nodeType":"ObjectExpression","source":"bar = { a: 1 };","fix":{"range":[8150,8151],"text":""}},{"ruleId":"operator-assignment","severity":2,"message":"Assignment can be replaced with operator assignment.","line":611,"column":1,"nodeType":"AssignmentExpression","source":"bar = bar + 1;"},{"ruleId":"operator-linebreak","severity":2,"message":"'+' should be placed at the beginning of the line.","line":614,"column":10,"nodeType":"BinaryExpression","source":"bar = 1 +"},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":618,"column":10,"nodeType":"BlockStatement","source":"if(bool) {"},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":622,"column":1,"nodeType":"BlockStatement","source":"}"},{"ruleId":"quote-props","severity":2,"message":"Unnecessarily quoted property 'a' found.","line":625,"column":8,"nodeType":"Property","source":"obj = {'a': 3};"},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":628,"column":7,"nodeType":"Literal","source":"bar = \"2\";","fix":{"range":[8325,8328],"text":"'2'"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":632,"column":8,"nodeType":"ExpressionStatement","source":"bar = 2","fix":{"range":[8359,8359],"text":";"}},{"ruleId":"semi-spacing","severity":2,"message":"Unexpected whitespace before semicolon.","line":635,"column":9,"nodeType":"ExpressionStatement","source":"bar = 2 ;","fix":{"range":[8384,8385],"text":""}},{"ruleId":"space-before-blocks","severity":2,"message":"Missing space before opening brace.","line":638,"column":9,"nodeType":"BlockStatement","source":"if(bool){","fix":{"range":[8419,8419],"text":" "}},{"ruleId":"space-before-function-paren","severity":2,"message":"Unexpected space before function parentheses.","line":643,"column":13,"nodeType":"FunctionDeclaration","source":"function foo () { // eslint-disable-line no-redeclare","fix":{"range":[8479,8480],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":648,"column":4,"nodeType":"Program","source":"foo( 1 );","fix":{"range":[8559,8560],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":648,"column":8,"nodeType":"Program","source":"foo( 1 );","fix":{"range":[8561,8562],"text":""}},{"ruleId":"space-infix-ops","severity":2,"message":"Infix operators must be spaced.","line":651,"column":8,"nodeType":"BinaryExpression","source":"bar = 1+2;","fix":{"range":[8593,8594],"text":" + "}},{"ruleId":"space-unary-ops","severity":2,"message":"Unexpected space before unary operator '++'.","line":654,"column":7,"nodeType":"UpdateExpression","source":"bar = bar ++;","fix":{"range":[8627,8628],"text":""}},{"ruleId":"spaced-comment","severity":2,"message":"Expected space or tab after '/*' in comment.","line":657,"column":1,"nodeType":"Block","source":"/*Not spaced */","fix":{"range":[8653,8653],"text":" "}},{"ruleId":"arrow-body-style","severity":2,"message":"Unexpected block statement surrounding arrow body.","line":662,"column":13,"nodeType":"ArrowFunctionExpression","source":"bar = () => { return 2; };"},{"ruleId":"arrow-parens","severity":2,"message":"Unexpected parentheses around single function argument","line":665,"column":7,"nodeType":"ArrowFunctionExpression","source":"bar = (a) => 2;"},{"ruleId":"no-unused-vars","severity":2,"message":"'a' is defined but never used","line":665,"column":8,"nodeType":"Identifier","source":"bar = (a) => 2;"},{"ruleId":"arrow-spacing","severity":2,"message":"Missing space before =>","line":668,"column":8,"nodeType":"Punctuator","source":"bar = ()=>{","fix":{"range":[8785,8785],"text":" "}},{"ruleId":"arrow-spacing","severity":2,"message":"Missing space after =>","line":668,"column":11,"nodeType":"Punctuator","source":"bar = ()=>{","fix":{"range":[8787,8787],"text":" "}},{"ruleId":"constructor-super","severity":2,"message":"Unexpected 'super()'.","line":676,"column":5,"nodeType":"CallExpression","source":"    super();"},{"ruleId":"generator-star-spacing","severity":2,"message":"Missing space before *.","line":681,"column":9,"nodeType":"Punctuator","source":"function*foo() { // eslint-disable-line no-redeclare","fix":{"range":[8959,8959],"text":" "}},{"ruleId":"generator-star-spacing","severity":2,"message":"Missing space after *.","line":681,"column":9,"nodeType":"Punctuator","source":"function*foo() { // eslint-disable-line no-redeclare","fix":{"range":[8960,8960],"text":" "}},{"ruleId":"no-class-assign","severity":2,"message":"'A' is a class.","line":686,"column":1,"nodeType":"Identifier","source":"A = 2;"},{"ruleId":"no-confusing-arrow","severity":2,"message":"Arrow function used ambiguously with a conditional expression.","line":689,"column":7,"nodeType":"ArrowFunctionExpression","source":"bar = d => bar === 1 ? 2 : d;"},{"ruleId":"no-const-assign","severity":2,"message":"'number' is constant.","line":692,"column":1,"nodeType":"Identifier","source":"number = 2;"},{"ruleId":"no-dupe-class-members","severity":2,"message":"Duplicate name 'bar'.","line":699,"column":3,"nodeType":"MethodDefinition","source":"  bar() {"},{"ruleId":"no-new-symbol","severity":2,"message":"`Symbol` cannot be called as a constructor.","line":705,"column":11,"nodeType":"Identifier","source":"bar = new Symbol('thing');"},{"ruleId":"no-this-before-super","severity":2,"message":"'this' is not allowed before 'super()'.","line":710,"column":5,"nodeType":"ThisExpression","source":"    this.l = 1;"},{"ruleId":"no-useless-computed-key","severity":2,"message":"Unnecessarily computed property ['k'] found.","line":716,"column":8,"nodeType":"Property","source":"obj = {['k']: 2};"},{"ruleId":"no-useless-constructor","severity":2,"message":"Useless constructor.","line":720,"column":3,"nodeType":"MethodDefinition","source":"  constructor() {"},{"ruleId":"no-var","severity":2,"message":"Unexpected var, use let or const instead.","line":726,"column":1,"nodeType":"VariableDeclaration","source":"var lk = 2; // eslint-disable-line no-unused-vars, vars-on-top"},{"ruleId":"object-shorthand","severity":2,"message":"Expected property shorthand.","line":729,"column":8,"nodeType":"Property","source":"obj = {bar: bar};"},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":731,"column":3,"nodeType":"Property","source":"  k: function() {"},{"ruleId":"prefer-arrow-callback","severity":2,"message":"Unexpected function expression.","line":737,"column":5,"nodeType":"FunctionExpression","source":"foo(function(a) { return a; });"},{"ruleId":"prefer-const","severity":2,"message":"'neverChanges' is never reassigned, use 'const' instead.","line":740,"column":5,"nodeType":"Identifier","source":"let neverChanges = 2; // eslint-disable-line no-unused-vars"},{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":744,"column":10,"nodeType":"Identifier","source":"  return arguments;"},{"ruleId":"prefer-spread","severity":2,"message":"use the spread operator instead of the '.apply()'.","line":749,"column":1,"nodeType":"CallExpression","source":"Math.max.apply(Math, array);"},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":753,"column":7,"nodeType":"BinaryExpression","source":"bar = string + 'ok';"},{"ruleId":"require-yield","severity":2,"message":"This generator function does not have 'yield'.","line":756,"column":1,"nodeType":"FunctionDeclaration","source":"function * foo() { // eslint-disable-line no-redeclare"},{"ruleId":"template-curly-spacing","severity":2,"message":"Unexpected space(s) after '${'.","line":761,"column":8,"source":"bar = `${ bar } hi`;","fix":{"range":[10239,10240],"text":""}},{"ruleId":"template-curly-spacing","severity":2,"message":"Unexpected space(s) before '}'.","line":761,"column":15,"source":"bar = `${ bar } hi`;","fix":{"range":[10243,10244],"text":""}},{"ruleId":"yield-star-spacing","severity":2,"message":"Missing space after *.","line":765,"column":8,"nodeType":"Punctuator","source":"  yield*bar();","fix":{"range":[10338,10338],"text":" "}},{"ruleId":"yield-star-spacing","severity":2,"message":"Missing space before *.","line":765,"column":8,"nodeType":"Punctuator","source":"  yield*bar();","fix":{"range":[10337,10337],"text":" "}},{"ruleId":"eol-last","severity":2,"message":"Newline required at end of file but not found.","line":774,"column":2,"nodeType":"Program","source":"// eol-last","fix":{"range":[10437,10437],"text":"\n"}}]

  [32m1 test passed[39m

